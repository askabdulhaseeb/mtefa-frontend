// Mocks generated by Mockito 5.4.6 from annotations
// in mtefa/test/mocks/mock_repositories.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:drift/drift.dart' as _i4;
import 'package:drift/src/runtime/executor/stream_queries.dart' as _i6;
import 'package:flutter/foundation.dart' as _i11;
import 'package:flutter_secure_storage/flutter_secure_storage.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i12;
import 'package:mtefa/core/database/database.dart' as _i5;
import 'package:mtefa/core/resources/data_state.dart' as _i2;
import 'package:mtefa/core/utils/token_manager.dart' as _i10;
import 'package:mtefa/domain/entities/auth/user_entity.dart' as _i9;
import 'package:mtefa/domain/repositories/auth_repository.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDataState_0<T> extends _i1.SmartFake implements _i2.DataState<T> {
  _FakeDataState_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeIOSOptions_1 extends _i1.SmartFake implements _i3.IOSOptions {
  _FakeIOSOptions_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAndroidOptions_2 extends _i1.SmartFake
    implements _i3.AndroidOptions {
  _FakeAndroidOptions_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeLinuxOptions_3 extends _i1.SmartFake implements _i3.LinuxOptions {
  _FakeLinuxOptions_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeWindowsOptions_4 extends _i1.SmartFake
    implements _i3.WindowsOptions {
  _FakeWindowsOptions_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeWebOptions_5 extends _i1.SmartFake implements _i3.WebOptions {
  _FakeWebOptions_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMacOsOptions_6 extends _i1.SmartFake implements _i3.MacOsOptions {
  _FakeMacOsOptions_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMigrationStrategy_7 extends _i1.SmartFake
    implements _i4.MigrationStrategy {
  _FakeMigrationStrategy_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$UsersTable_8 extends _i1.SmartFake implements _i5.$UsersTable {
  _Fake$UsersTable_8(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$BusinessTableTable_9 extends _i1.SmartFake
    implements _i5.$BusinessTableTable {
  _Fake$BusinessTableTable_9(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$BranchesTableTable_10 extends _i1.SmartFake
    implements _i5.$BranchesTableTable {
  _Fake$BranchesTableTable_10(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$UserRolesTableTable_11 extends _i1.SmartFake
    implements _i5.$UserRolesTableTable {
  _Fake$UserRolesTableTable_11(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$BusinessUsersTableTable_12 extends _i1.SmartFake
    implements _i5.$BusinessUsersTableTable {
  _Fake$BusinessUsersTableTable_12(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$ActionQueueTableTable_13 extends _i1.SmartFake
    implements _i5.$ActionQueueTableTable {
  _Fake$ActionQueueTableTable_13(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$SyncStatusTableTable_14 extends _i1.SmartFake
    implements _i5.$SyncStatusTableTable {
  _Fake$SyncStatusTableTable_14(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$SuppliersTable_15 extends _i1.SmartFake
    implements _i5.$SuppliersTable {
  _Fake$SuppliersTable_15(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$InventoryLineTable_16 extends _i1.SmartFake
    implements _i5.$InventoryLineTable {
  _Fake$InventoryLineTable_16(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$CategoryTableTable_17 extends _i1.SmartFake
    implements _i5.$CategoryTableTable {
  _Fake$CategoryTableTable_17(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$SubCategoryTable_18 extends _i1.SmartFake
    implements _i5.$SubCategoryTable {
  _Fake$SubCategoryTable_18(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$InventoryColorsTable_19 extends _i1.SmartFake
    implements _i5.$InventoryColorsTable {
  _Fake$InventoryColorsTable_19(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$InventorySizesTable_20 extends _i1.SmartFake
    implements _i5.$InventorySizesTable {
  _Fake$InventorySizesTable_20(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$SeasonTable_21 extends _i1.SmartFake implements _i5.$SeasonTable {
  _Fake$SeasonTable_21(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$InventoryLocationsTable_22 extends _i1.SmartFake
    implements _i5.$InventoryLocationsTable {
  _Fake$InventoryLocationsTable_22(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$InventoryVariantsTable_23 extends _i1.SmartFake
    implements _i5.$InventoryVariantsTable {
  _Fake$InventoryVariantsTable_23(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$AppDatabaseManager_24 extends _i1.SmartFake
    implements _i5.$AppDatabaseManager {
  _Fake$AppDatabaseManager_24(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGeneratedDatabase_25 extends _i1.SmartFake
    implements _i4.GeneratedDatabase {
  _FakeGeneratedDatabase_25(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDriftDatabaseOptions_26 extends _i1.SmartFake
    implements _i4.DriftDatabaseOptions {
  _FakeDriftDatabaseOptions_26(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeStreamQueryUpdateRules_27 extends _i1.SmartFake
    implements _i4.StreamQueryUpdateRules {
  _FakeStreamQueryUpdateRules_27(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDatabaseConnection_28 extends _i1.SmartFake
    implements _i4.DatabaseConnection {
  _FakeDatabaseConnection_28(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeQueryExecutor_29 extends _i1.SmartFake implements _i4.QueryExecutor {
  _FakeQueryExecutor_29(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeStreamQueryStore_30 extends _i1.SmartFake
    implements _i6.StreamQueryStore {
  _FakeStreamQueryStore_30(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDatabaseConnectionUser_31 extends _i1.SmartFake
    implements _i4.DatabaseConnectionUser {
  _FakeDatabaseConnectionUser_31(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMigrator_32 extends _i1.SmartFake implements _i4.Migrator {
  _FakeMigrator_32(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFuture_33<T1> extends _i1.SmartFake implements _i7.Future<T1> {
  _FakeFuture_33(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeInsertStatement_34<T1 extends _i4.Table, D1> extends _i1.SmartFake
    implements _i4.InsertStatement<T1, D1> {
  _FakeInsertStatement_34(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUpdateStatement_35<T extends _i4.Table, D> extends _i1.SmartFake
    implements _i4.UpdateStatement<T, D> {
  _FakeUpdateStatement_35(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSimpleSelectStatement_36<T1 extends _i4.HasResultSet, D>
    extends _i1.SmartFake
    implements _i4.SimpleSelectStatement<T1, D> {
  _FakeSimpleSelectStatement_36(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeJoinedSelectStatement_37<FirstT extends _i4.HasResultSet, FirstD>
    extends _i1.SmartFake
    implements _i4.JoinedSelectStatement<FirstT, FirstD> {
  _FakeJoinedSelectStatement_37(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeBaseSelectStatement_38<Row> extends _i1.SmartFake
    implements _i4.BaseSelectStatement<Row> {
  _FakeBaseSelectStatement_38(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDeleteStatement_39<T1 extends _i4.Table, D1> extends _i1.SmartFake
    implements _i4.DeleteStatement<T1, D1> {
  _FakeDeleteStatement_39(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSelectable_40<T> extends _i1.SmartFake implements _i4.Selectable<T> {
  _FakeSelectable_40(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGenerationContext_41 extends _i1.SmartFake
    implements _i4.GenerationContext {
  _FakeGenerationContext_41(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i8.AuthRepository {
  MockAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i2.DataState<_i9.LoginResponseEntity>> login({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#login, [], {#email: email, #password: password}),
            returnValue:
                _i7.Future<_i2.DataState<_i9.LoginResponseEntity>>.value(
                  _FakeDataState_0<_i9.LoginResponseEntity>(
                    this,
                    Invocation.method(#login, [], {
                      #email: email,
                      #password: password,
                    }),
                  ),
                ),
          )
          as _i7.Future<_i2.DataState<_i9.LoginResponseEntity>>);

  @override
  _i7.Future<_i2.DataState<_i9.LoginResponseEntity>> verifyTwoFactor({
    required String? code,
    required String? method,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#verifyTwoFactor, [], {
              #code: code,
              #method: method,
            }),
            returnValue:
                _i7.Future<_i2.DataState<_i9.LoginResponseEntity>>.value(
                  _FakeDataState_0<_i9.LoginResponseEntity>(
                    this,
                    Invocation.method(#verifyTwoFactor, [], {
                      #code: code,
                      #method: method,
                    }),
                  ),
                ),
          )
          as _i7.Future<_i2.DataState<_i9.LoginResponseEntity>>);

  @override
  _i7.Future<_i2.DataState<void>> logout() =>
      (super.noSuchMethod(
            Invocation.method(#logout, []),
            returnValue: _i7.Future<_i2.DataState<void>>.value(
              _FakeDataState_0<void>(this, Invocation.method(#logout, [])),
            ),
          )
          as _i7.Future<_i2.DataState<void>>);

  @override
  _i7.Future<_i2.DataState<_i9.UserEntity>> getCurrentUser() =>
      (super.noSuchMethod(
            Invocation.method(#getCurrentUser, []),
            returnValue: _i7.Future<_i2.DataState<_i9.UserEntity>>.value(
              _FakeDataState_0<_i9.UserEntity>(
                this,
                Invocation.method(#getCurrentUser, []),
              ),
            ),
          )
          as _i7.Future<_i2.DataState<_i9.UserEntity>>);

  @override
  _i7.Future<_i2.DataState<_i9.AuthTokenEntity>> refreshToken({
    required String? refreshToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#refreshToken, [], {#refreshToken: refreshToken}),
            returnValue: _i7.Future<_i2.DataState<_i9.AuthTokenEntity>>.value(
              _FakeDataState_0<_i9.AuthTokenEntity>(
                this,
                Invocation.method(#refreshToken, [], {
                  #refreshToken: refreshToken,
                }),
              ),
            ),
          )
          as _i7.Future<_i2.DataState<_i9.AuthTokenEntity>>);

  @override
  _i7.Future<bool> isAuthenticated() =>
      (super.noSuchMethod(
            Invocation.method(#isAuthenticated, []),
            returnValue: _i7.Future<bool>.value(false),
          )
          as _i7.Future<bool>);

  @override
  _i7.Future<Map<String, String>?> getSavedCredentials() =>
      (super.noSuchMethod(
            Invocation.method(#getSavedCredentials, []),
            returnValue: _i7.Future<Map<String, String>?>.value(),
          )
          as _i7.Future<Map<String, String>?>);

  @override
  _i7.Future<void> saveCredentials({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#saveCredentials, [], {
              #email: email,
              #password: password,
            }),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> clearSavedCredentials() =>
      (super.noSuchMethod(
            Invocation.method(#clearSavedCredentials, []),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<_i2.DataState<void>> changePassword({
    required String? currentPassword,
    required String? newPassword,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#changePassword, [], {
              #currentPassword: currentPassword,
              #newPassword: newPassword,
            }),
            returnValue: _i7.Future<_i2.DataState<void>>.value(
              _FakeDataState_0<void>(
                this,
                Invocation.method(#changePassword, [], {
                  #currentPassword: currentPassword,
                  #newPassword: newPassword,
                }),
              ),
            ),
          )
          as _i7.Future<_i2.DataState<void>>);

  @override
  _i7.Future<_i2.DataState<void>> requestPasswordReset({
    required String? email,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#requestPasswordReset, [], {#email: email}),
            returnValue: _i7.Future<_i2.DataState<void>>.value(
              _FakeDataState_0<void>(
                this,
                Invocation.method(#requestPasswordReset, [], {#email: email}),
              ),
            ),
          )
          as _i7.Future<_i2.DataState<void>>);

  @override
  _i7.Future<_i2.DataState<void>> resetPassword({
    required String? token,
    required String? newPassword,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#resetPassword, [], {
              #token: token,
              #newPassword: newPassword,
            }),
            returnValue: _i7.Future<_i2.DataState<void>>.value(
              _FakeDataState_0<void>(
                this,
                Invocation.method(#resetPassword, [], {
                  #token: token,
                  #newPassword: newPassword,
                }),
              ),
            ),
          )
          as _i7.Future<_i2.DataState<void>>);

  @override
  _i7.Future<_i2.DataState<_i9.UserEntity>> updateProfile({
    required String? userId,
    String? name,
    String? phone,
    String? avatarUrl,
    String? preferredLanguage,
    String? timezone,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updateProfile, [], {
              #userId: userId,
              #name: name,
              #phone: phone,
              #avatarUrl: avatarUrl,
              #preferredLanguage: preferredLanguage,
              #timezone: timezone,
            }),
            returnValue: _i7.Future<_i2.DataState<_i9.UserEntity>>.value(
              _FakeDataState_0<_i9.UserEntity>(
                this,
                Invocation.method(#updateProfile, [], {
                  #userId: userId,
                  #name: name,
                  #phone: phone,
                  #avatarUrl: avatarUrl,
                  #preferredLanguage: preferredLanguage,
                  #timezone: timezone,
                }),
              ),
            ),
          )
          as _i7.Future<_i2.DataState<_i9.UserEntity>>);

  @override
  _i7.Future<_i2.DataState<_i9.UserEntity>> switchBusiness({
    required String? businessId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#switchBusiness, [], {#businessId: businessId}),
            returnValue: _i7.Future<_i2.DataState<_i9.UserEntity>>.value(
              _FakeDataState_0<_i9.UserEntity>(
                this,
                Invocation.method(#switchBusiness, [], {
                  #businessId: businessId,
                }),
              ),
            ),
          )
          as _i7.Future<_i2.DataState<_i9.UserEntity>>);

  @override
  _i7.Future<_i2.DataState<_i9.UserEntity>> switchBranch({
    required String? branchId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#switchBranch, [], {#branchId: branchId}),
            returnValue: _i7.Future<_i2.DataState<_i9.UserEntity>>.value(
              _FakeDataState_0<_i9.UserEntity>(
                this,
                Invocation.method(#switchBranch, [], {#branchId: branchId}),
              ),
            ),
          )
          as _i7.Future<_i2.DataState<_i9.UserEntity>>);

  @override
  _i7.Future<_i2.DataState<Map<String, dynamic>>> enableTwoFactor({
    required String? method,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#enableTwoFactor, [], {#method: method}),
            returnValue: _i7.Future<_i2.DataState<Map<String, dynamic>>>.value(
              _FakeDataState_0<Map<String, dynamic>>(
                this,
                Invocation.method(#enableTwoFactor, [], {#method: method}),
              ),
            ),
          )
          as _i7.Future<_i2.DataState<Map<String, dynamic>>>);

  @override
  _i7.Future<_i2.DataState<void>> disableTwoFactor({required String? code}) =>
      (super.noSuchMethod(
            Invocation.method(#disableTwoFactor, [], {#code: code}),
            returnValue: _i7.Future<_i2.DataState<void>>.value(
              _FakeDataState_0<void>(
                this,
                Invocation.method(#disableTwoFactor, [], {#code: code}),
              ),
            ),
          )
          as _i7.Future<_i2.DataState<void>>);

  @override
  _i7.Future<_i2.DataState<void>> verifyEmail({required String? token}) =>
      (super.noSuchMethod(
            Invocation.method(#verifyEmail, [], {#token: token}),
            returnValue: _i7.Future<_i2.DataState<void>>.value(
              _FakeDataState_0<void>(
                this,
                Invocation.method(#verifyEmail, [], {#token: token}),
              ),
            ),
          )
          as _i7.Future<_i2.DataState<void>>);

  @override
  _i7.Future<_i2.DataState<void>> resendVerificationEmail() =>
      (super.noSuchMethod(
            Invocation.method(#resendVerificationEmail, []),
            returnValue: _i7.Future<_i2.DataState<void>>.value(
              _FakeDataState_0<void>(
                this,
                Invocation.method(#resendVerificationEmail, []),
              ),
            ),
          )
          as _i7.Future<_i2.DataState<void>>);

  @override
  _i7.Future<_i2.DataState<void>> updateFcmToken({required String? fcmToken}) =>
      (super.noSuchMethod(
            Invocation.method(#updateFcmToken, [], {#fcmToken: fcmToken}),
            returnValue: _i7.Future<_i2.DataState<void>>.value(
              _FakeDataState_0<void>(
                this,
                Invocation.method(#updateFcmToken, [], {#fcmToken: fcmToken}),
              ),
            ),
          )
          as _i7.Future<_i2.DataState<void>>);
}

/// A class which mocks [TokenManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockTokenManager extends _i1.Mock implements _i10.TokenManager {
  MockTokenManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<void> saveTokens({
    required String? accessToken,
    required String? refreshToken,
    int? expiresIn,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#saveTokens, [], {
              #accessToken: accessToken,
              #refreshToken: refreshToken,
              #expiresIn: expiresIn,
            }),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<String?> getAccessToken() =>
      (super.noSuchMethod(
            Invocation.method(#getAccessToken, []),
            returnValue: _i7.Future<String?>.value(),
          )
          as _i7.Future<String?>);

  @override
  _i7.Future<String?> getRefreshToken() =>
      (super.noSuchMethod(
            Invocation.method(#getRefreshToken, []),
            returnValue: _i7.Future<String?>.value(),
          )
          as _i7.Future<String?>);

  @override
  _i7.Future<bool> isTokenExpired() =>
      (super.noSuchMethod(
            Invocation.method(#isTokenExpired, []),
            returnValue: _i7.Future<bool>.value(false),
          )
          as _i7.Future<bool>);

  @override
  _i7.Future<void> clearTokens() =>
      (super.noSuchMethod(
            Invocation.method(#clearTokens, []),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> saveUserId(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#saveUserId, [userId]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<String?> getUserId() =>
      (super.noSuchMethod(
            Invocation.method(#getUserId, []),
            returnValue: _i7.Future<String?>.value(),
          )
          as _i7.Future<String?>);

  @override
  _i7.Future<bool> isAuthenticated() =>
      (super.noSuchMethod(
            Invocation.method(#isAuthenticated, []),
            returnValue: _i7.Future<bool>.value(false),
          )
          as _i7.Future<bool>);

  @override
  _i7.Future<void> updateAccessToken(String? accessToken, {int? expiresIn}) =>
      (super.noSuchMethod(
            Invocation.method(
              #updateAccessToken,
              [accessToken],
              {#expiresIn: expiresIn},
            ),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);
}

/// A class which mocks [FlutterSecureStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockFlutterSecureStorage extends _i1.Mock
    implements _i3.FlutterSecureStorage {
  MockFlutterSecureStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.IOSOptions get iOptions =>
      (super.noSuchMethod(
            Invocation.getter(#iOptions),
            returnValue: _FakeIOSOptions_1(this, Invocation.getter(#iOptions)),
          )
          as _i3.IOSOptions);

  @override
  _i3.AndroidOptions get aOptions =>
      (super.noSuchMethod(
            Invocation.getter(#aOptions),
            returnValue: _FakeAndroidOptions_2(
              this,
              Invocation.getter(#aOptions),
            ),
          )
          as _i3.AndroidOptions);

  @override
  _i3.LinuxOptions get lOptions =>
      (super.noSuchMethod(
            Invocation.getter(#lOptions),
            returnValue: _FakeLinuxOptions_3(
              this,
              Invocation.getter(#lOptions),
            ),
          )
          as _i3.LinuxOptions);

  @override
  _i3.WindowsOptions get wOptions =>
      (super.noSuchMethod(
            Invocation.getter(#wOptions),
            returnValue: _FakeWindowsOptions_4(
              this,
              Invocation.getter(#wOptions),
            ),
          )
          as _i3.WindowsOptions);

  @override
  _i3.WebOptions get webOptions =>
      (super.noSuchMethod(
            Invocation.getter(#webOptions),
            returnValue: _FakeWebOptions_5(
              this,
              Invocation.getter(#webOptions),
            ),
          )
          as _i3.WebOptions);

  @override
  _i3.MacOsOptions get mOptions =>
      (super.noSuchMethod(
            Invocation.getter(#mOptions),
            returnValue: _FakeMacOsOptions_6(
              this,
              Invocation.getter(#mOptions),
            ),
          )
          as _i3.MacOsOptions);

  @override
  void registerListener({
    required String? key,
    required _i11.ValueChanged<String?>? listener,
  }) => super.noSuchMethod(
    Invocation.method(#registerListener, [], {#key: key, #listener: listener}),
    returnValueForMissingStub: null,
  );

  @override
  void unregisterListener({
    required String? key,
    required _i11.ValueChanged<String?>? listener,
  }) => super.noSuchMethod(
    Invocation.method(#unregisterListener, [], {
      #key: key,
      #listener: listener,
    }),
    returnValueForMissingStub: null,
  );

  @override
  void unregisterAllListenersForKey({required String? key}) =>
      super.noSuchMethod(
        Invocation.method(#unregisterAllListenersForKey, [], {#key: key}),
        returnValueForMissingStub: null,
      );

  @override
  void unregisterAllListeners() => super.noSuchMethod(
    Invocation.method(#unregisterAllListeners, []),
    returnValueForMissingStub: null,
  );

  @override
  _i7.Future<void> write({
    required String? key,
    required String? value,
    _i3.IOSOptions? iOptions,
    _i3.AndroidOptions? aOptions,
    _i3.LinuxOptions? lOptions,
    _i3.WebOptions? webOptions,
    _i3.MacOsOptions? mOptions,
    _i3.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#write, [], {
              #key: key,
              #value: value,
              #iOptions: iOptions,
              #aOptions: aOptions,
              #lOptions: lOptions,
              #webOptions: webOptions,
              #mOptions: mOptions,
              #wOptions: wOptions,
            }),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<String?> read({
    required String? key,
    _i3.IOSOptions? iOptions,
    _i3.AndroidOptions? aOptions,
    _i3.LinuxOptions? lOptions,
    _i3.WebOptions? webOptions,
    _i3.MacOsOptions? mOptions,
    _i3.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#read, [], {
              #key: key,
              #iOptions: iOptions,
              #aOptions: aOptions,
              #lOptions: lOptions,
              #webOptions: webOptions,
              #mOptions: mOptions,
              #wOptions: wOptions,
            }),
            returnValue: _i7.Future<String?>.value(),
          )
          as _i7.Future<String?>);

  @override
  _i7.Future<bool> containsKey({
    required String? key,
    _i3.IOSOptions? iOptions,
    _i3.AndroidOptions? aOptions,
    _i3.LinuxOptions? lOptions,
    _i3.WebOptions? webOptions,
    _i3.MacOsOptions? mOptions,
    _i3.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#containsKey, [], {
              #key: key,
              #iOptions: iOptions,
              #aOptions: aOptions,
              #lOptions: lOptions,
              #webOptions: webOptions,
              #mOptions: mOptions,
              #wOptions: wOptions,
            }),
            returnValue: _i7.Future<bool>.value(false),
          )
          as _i7.Future<bool>);

  @override
  _i7.Future<void> delete({
    required String? key,
    _i3.IOSOptions? iOptions,
    _i3.AndroidOptions? aOptions,
    _i3.LinuxOptions? lOptions,
    _i3.WebOptions? webOptions,
    _i3.MacOsOptions? mOptions,
    _i3.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#delete, [], {
              #key: key,
              #iOptions: iOptions,
              #aOptions: aOptions,
              #lOptions: lOptions,
              #webOptions: webOptions,
              #mOptions: mOptions,
              #wOptions: wOptions,
            }),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<Map<String, String>> readAll({
    _i3.IOSOptions? iOptions,
    _i3.AndroidOptions? aOptions,
    _i3.LinuxOptions? lOptions,
    _i3.WebOptions? webOptions,
    _i3.MacOsOptions? mOptions,
    _i3.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#readAll, [], {
              #iOptions: iOptions,
              #aOptions: aOptions,
              #lOptions: lOptions,
              #webOptions: webOptions,
              #mOptions: mOptions,
              #wOptions: wOptions,
            }),
            returnValue: _i7.Future<Map<String, String>>.value(
              <String, String>{},
            ),
          )
          as _i7.Future<Map<String, String>>);

  @override
  _i7.Future<void> deleteAll({
    _i3.IOSOptions? iOptions,
    _i3.AndroidOptions? aOptions,
    _i3.LinuxOptions? lOptions,
    _i3.WebOptions? webOptions,
    _i3.MacOsOptions? mOptions,
    _i3.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#deleteAll, [], {
              #iOptions: iOptions,
              #aOptions: aOptions,
              #lOptions: lOptions,
              #webOptions: webOptions,
              #mOptions: mOptions,
              #wOptions: wOptions,
            }),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<bool?> isCupertinoProtectedDataAvailable() =>
      (super.noSuchMethod(
            Invocation.method(#isCupertinoProtectedDataAvailable, []),
            returnValue: _i7.Future<bool?>.value(),
          )
          as _i7.Future<bool?>);
}

/// A class which mocks [AppDatabase].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppDatabase extends _i1.Mock implements _i5.AppDatabase {
  MockAppDatabase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get schemaVersion =>
      (super.noSuchMethod(Invocation.getter(#schemaVersion), returnValue: 0)
          as int);

  @override
  _i4.MigrationStrategy get migration =>
      (super.noSuchMethod(
            Invocation.getter(#migration),
            returnValue: _FakeMigrationStrategy_7(
              this,
              Invocation.getter(#migration),
            ),
          )
          as _i4.MigrationStrategy);

  @override
  _i5.$UsersTable get users =>
      (super.noSuchMethod(
            Invocation.getter(#users),
            returnValue: _Fake$UsersTable_8(this, Invocation.getter(#users)),
          )
          as _i5.$UsersTable);

  @override
  _i5.$BusinessTableTable get businessTable =>
      (super.noSuchMethod(
            Invocation.getter(#businessTable),
            returnValue: _Fake$BusinessTableTable_9(
              this,
              Invocation.getter(#businessTable),
            ),
          )
          as _i5.$BusinessTableTable);

  @override
  _i5.$BranchesTableTable get branchesTable =>
      (super.noSuchMethod(
            Invocation.getter(#branchesTable),
            returnValue: _Fake$BranchesTableTable_10(
              this,
              Invocation.getter(#branchesTable),
            ),
          )
          as _i5.$BranchesTableTable);

  @override
  _i5.$UserRolesTableTable get userRolesTable =>
      (super.noSuchMethod(
            Invocation.getter(#userRolesTable),
            returnValue: _Fake$UserRolesTableTable_11(
              this,
              Invocation.getter(#userRolesTable),
            ),
          )
          as _i5.$UserRolesTableTable);

  @override
  _i5.$BusinessUsersTableTable get businessUsersTable =>
      (super.noSuchMethod(
            Invocation.getter(#businessUsersTable),
            returnValue: _Fake$BusinessUsersTableTable_12(
              this,
              Invocation.getter(#businessUsersTable),
            ),
          )
          as _i5.$BusinessUsersTableTable);

  @override
  _i5.$ActionQueueTableTable get actionQueueTable =>
      (super.noSuchMethod(
            Invocation.getter(#actionQueueTable),
            returnValue: _Fake$ActionQueueTableTable_13(
              this,
              Invocation.getter(#actionQueueTable),
            ),
          )
          as _i5.$ActionQueueTableTable);

  @override
  _i5.$SyncStatusTableTable get syncStatusTable =>
      (super.noSuchMethod(
            Invocation.getter(#syncStatusTable),
            returnValue: _Fake$SyncStatusTableTable_14(
              this,
              Invocation.getter(#syncStatusTable),
            ),
          )
          as _i5.$SyncStatusTableTable);

  @override
  _i5.$SuppliersTable get suppliers =>
      (super.noSuchMethod(
            Invocation.getter(#suppliers),
            returnValue: _Fake$SuppliersTable_15(
              this,
              Invocation.getter(#suppliers),
            ),
          )
          as _i5.$SuppliersTable);

  @override
  _i5.$InventoryLineTable get inventoryLine =>
      (super.noSuchMethod(
            Invocation.getter(#inventoryLine),
            returnValue: _Fake$InventoryLineTable_16(
              this,
              Invocation.getter(#inventoryLine),
            ),
          )
          as _i5.$InventoryLineTable);

  @override
  _i5.$CategoryTableTable get categoryTable =>
      (super.noSuchMethod(
            Invocation.getter(#categoryTable),
            returnValue: _Fake$CategoryTableTable_17(
              this,
              Invocation.getter(#categoryTable),
            ),
          )
          as _i5.$CategoryTableTable);

  @override
  _i5.$SubCategoryTable get subCategory =>
      (super.noSuchMethod(
            Invocation.getter(#subCategory),
            returnValue: _Fake$SubCategoryTable_18(
              this,
              Invocation.getter(#subCategory),
            ),
          )
          as _i5.$SubCategoryTable);

  @override
  _i5.$InventoryColorsTable get inventoryColors =>
      (super.noSuchMethod(
            Invocation.getter(#inventoryColors),
            returnValue: _Fake$InventoryColorsTable_19(
              this,
              Invocation.getter(#inventoryColors),
            ),
          )
          as _i5.$InventoryColorsTable);

  @override
  _i5.$InventorySizesTable get inventorySizes =>
      (super.noSuchMethod(
            Invocation.getter(#inventorySizes),
            returnValue: _Fake$InventorySizesTable_20(
              this,
              Invocation.getter(#inventorySizes),
            ),
          )
          as _i5.$InventorySizesTable);

  @override
  _i5.$SeasonTable get season =>
      (super.noSuchMethod(
            Invocation.getter(#season),
            returnValue: _Fake$SeasonTable_21(this, Invocation.getter(#season)),
          )
          as _i5.$SeasonTable);

  @override
  _i5.$InventoryLocationsTable get inventoryLocations =>
      (super.noSuchMethod(
            Invocation.getter(#inventoryLocations),
            returnValue: _Fake$InventoryLocationsTable_22(
              this,
              Invocation.getter(#inventoryLocations),
            ),
          )
          as _i5.$InventoryLocationsTable);

  @override
  _i5.$InventoryVariantsTable get inventoryVariants =>
      (super.noSuchMethod(
            Invocation.getter(#inventoryVariants),
            returnValue: _Fake$InventoryVariantsTable_23(
              this,
              Invocation.getter(#inventoryVariants),
            ),
          )
          as _i5.$InventoryVariantsTable);

  @override
  _i5.$AppDatabaseManager get managers =>
      (super.noSuchMethod(
            Invocation.getter(#managers),
            returnValue: _Fake$AppDatabaseManager_24(
              this,
              Invocation.getter(#managers),
            ),
          )
          as _i5.$AppDatabaseManager);

  @override
  Iterable<_i4.TableInfo<_i4.Table, Object?>> get allTables =>
      (super.noSuchMethod(
            Invocation.getter(#allTables),
            returnValue: <_i4.TableInfo<_i4.Table, Object?>>[],
          )
          as Iterable<_i4.TableInfo<_i4.Table, Object?>>);

  @override
  List<_i4.DatabaseSchemaEntity> get allSchemaEntities =>
      (super.noSuchMethod(
            Invocation.getter(#allSchemaEntities),
            returnValue: <_i4.DatabaseSchemaEntity>[],
          )
          as List<_i4.DatabaseSchemaEntity>);

  @override
  _i4.GeneratedDatabase get attachedDatabase =>
      (super.noSuchMethod(
            Invocation.getter(#attachedDatabase),
            returnValue: _FakeGeneratedDatabase_25(
              this,
              Invocation.getter(#attachedDatabase),
            ),
          )
          as _i4.GeneratedDatabase);

  @override
  _i4.DriftDatabaseOptions get options =>
      (super.noSuchMethod(
            Invocation.getter(#options),
            returnValue: _FakeDriftDatabaseOptions_26(
              this,
              Invocation.getter(#options),
            ),
          )
          as _i4.DriftDatabaseOptions);

  @override
  _i4.StreamQueryUpdateRules get streamUpdateRules =>
      (super.noSuchMethod(
            Invocation.getter(#streamUpdateRules),
            returnValue: _FakeStreamQueryUpdateRules_27(
              this,
              Invocation.getter(#streamUpdateRules),
            ),
          )
          as _i4.StreamQueryUpdateRules);

  @override
  _i4.DatabaseConnection get connection =>
      (super.noSuchMethod(
            Invocation.getter(#connection),
            returnValue: _FakeDatabaseConnection_28(
              this,
              Invocation.getter(#connection),
            ),
          )
          as _i4.DatabaseConnection);

  @override
  _i4.SqlTypes get typeMapping =>
      (super.noSuchMethod(
            Invocation.getter(#typeMapping),
            returnValue: _i12.dummyValue<_i4.SqlTypes>(
              this,
              Invocation.getter(#typeMapping),
            ),
          )
          as _i4.SqlTypes);

  @override
  _i4.QueryExecutor get executor =>
      (super.noSuchMethod(
            Invocation.getter(#executor),
            returnValue: _FakeQueryExecutor_29(
              this,
              Invocation.getter(#executor),
            ),
          )
          as _i4.QueryExecutor);

  @override
  _i6.StreamQueryStore get streamQueries =>
      (super.noSuchMethod(
            Invocation.getter(#streamQueries),
            returnValue: _FakeStreamQueryStore_30(
              this,
              Invocation.getter(#streamQueries),
            ),
          )
          as _i6.StreamQueryStore);

  @override
  _i4.DatabaseConnectionUser get resolvedEngine =>
      (super.noSuchMethod(
            Invocation.getter(#resolvedEngine),
            returnValue: _FakeDatabaseConnectionUser_31(
              this,
              Invocation.getter(#resolvedEngine),
            ),
          )
          as _i4.DatabaseConnectionUser);

  @override
  _i4.Migrator createMigrator() =>
      (super.noSuchMethod(
            Invocation.method(#createMigrator, []),
            returnValue: _FakeMigrator_32(
              this,
              Invocation.method(#createMigrator, []),
            ),
          )
          as _i4.Migrator);

  @override
  _i7.Future<void> beforeOpen(
    _i4.QueryExecutor? executor,
    _i4.OpeningDetails? details,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#beforeOpen, [executor, details]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<void> close() =>
      (super.noSuchMethod(
            Invocation.method(#close, []),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Stream<T> createStream<T extends Object>(
    _i6.QueryStreamFetcher<T>? stmt,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createStream, [stmt]),
            returnValue: _i7.Stream<T>.empty(),
          )
          as _i7.Stream<T>);

  @override
  T alias<T, D>(_i4.ResultSetImplementation<T, D>? table, String? alias) =>
      (super.noSuchMethod(
            Invocation.method(#alias, [table, alias]),
            returnValue: _i12.dummyValue<T>(
              this,
              Invocation.method(#alias, [table, alias]),
            ),
          )
          as T);

  @override
  void markTablesUpdated(Iterable<_i4.TableInfo<_i4.Table, dynamic>>? tables) =>
      super.noSuchMethod(
        Invocation.method(#markTablesUpdated, [tables]),
        returnValueForMissingStub: null,
      );

  @override
  void notifyUpdates(Set<_i4.TableUpdate>? updates) => super.noSuchMethod(
    Invocation.method(#notifyUpdates, [updates]),
    returnValueForMissingStub: null,
  );

  @override
  _i7.Stream<Set<_i4.TableUpdate>> tableUpdates([
    _i4.TableUpdateQuery? query = const _i4.TableUpdateQuery.any(),
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#tableUpdates, [query]),
            returnValue: _i7.Stream<Set<_i4.TableUpdate>>.empty(),
          )
          as _i7.Stream<Set<_i4.TableUpdate>>);

  @override
  _i7.Future<T> doWhenOpened<T>(
    _i7.FutureOr<T> Function(_i4.QueryExecutor)? fn,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#doWhenOpened, [fn]),
            returnValue:
                _i12.ifNotNull(
                  _i12.dummyValueOrNull<T>(
                    this,
                    Invocation.method(#doWhenOpened, [fn]),
                  ),
                  (T v) => _i7.Future<T>.value(v),
                ) ??
                _FakeFuture_33<T>(this, Invocation.method(#doWhenOpened, [fn])),
          )
          as _i7.Future<T>);

  @override
  _i4.InsertStatement<T, D> into<T extends _i4.Table, D>(
    _i4.TableInfo<T, D>? table,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#into, [table]),
            returnValue: _FakeInsertStatement_34<T, D>(
              this,
              Invocation.method(#into, [table]),
            ),
          )
          as _i4.InsertStatement<T, D>);

  @override
  _i4.UpdateStatement<Tbl, R> update<Tbl extends _i4.Table, R>(
    _i4.TableInfo<Tbl, R>? table,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#update, [table]),
            returnValue: _FakeUpdateStatement_35<Tbl, R>(
              this,
              Invocation.method(#update, [table]),
            ),
          )
          as _i4.UpdateStatement<Tbl, R>);

  @override
  _i4.SimpleSelectStatement<T, R> select<T extends _i4.HasResultSet, R>(
    _i4.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#select, [table], {#distinct: distinct}),
            returnValue: _FakeSimpleSelectStatement_36<T, R>(
              this,
              Invocation.method(#select, [table], {#distinct: distinct}),
            ),
          )
          as _i4.SimpleSelectStatement<T, R>);

  @override
  _i4.JoinedSelectStatement<T, R> selectOnly<T extends _i4.HasResultSet, R>(
    _i4.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#selectOnly, [table], {#distinct: distinct}),
            returnValue: _FakeJoinedSelectStatement_37<T, R>(
              this,
              Invocation.method(#selectOnly, [table], {#distinct: distinct}),
            ),
          )
          as _i4.JoinedSelectStatement<T, R>);

  @override
  _i4.BaseSelectStatement<_i4.TypedResult> selectExpressions(
    Iterable<_i4.Expression<Object>>? columns,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#selectExpressions, [columns]),
            returnValue: _FakeBaseSelectStatement_38<_i4.TypedResult>(
              this,
              Invocation.method(#selectExpressions, [columns]),
            ),
          )
          as _i4.BaseSelectStatement<_i4.TypedResult>);

  @override
  _i4.DeleteStatement<T, D> delete<T extends _i4.Table, D>(
    _i4.TableInfo<T, D>? table,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#delete, [table]),
            returnValue: _FakeDeleteStatement_39<T, D>(
              this,
              Invocation.method(#delete, [table]),
            ),
          )
          as _i4.DeleteStatement<T, D>);

  @override
  _i7.Future<int> customUpdate(
    String? query, {
    List<_i4.Variable<Object>>? variables = const [],
    Set<_i4.ResultSetImplementation<dynamic, dynamic>>? updates,
    _i4.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customUpdate,
              [query],
              {
                #variables: variables,
                #updates: updates,
                #updateKind: updateKind,
              },
            ),
            returnValue: _i7.Future<int>.value(0),
          )
          as _i7.Future<int>);

  @override
  _i7.Future<int> customInsert(
    String? query, {
    List<_i4.Variable<Object>>? variables = const [],
    Set<_i4.ResultSetImplementation<dynamic, dynamic>>? updates,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customInsert,
              [query],
              {#variables: variables, #updates: updates},
            ),
            returnValue: _i7.Future<int>.value(0),
          )
          as _i7.Future<int>);

  @override
  _i7.Future<List<_i4.QueryRow>> customWriteReturning(
    String? query, {
    List<_i4.Variable<Object>>? variables = const [],
    Set<_i4.ResultSetImplementation<dynamic, dynamic>>? updates,
    _i4.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customWriteReturning,
              [query],
              {
                #variables: variables,
                #updates: updates,
                #updateKind: updateKind,
              },
            ),
            returnValue: _i7.Future<List<_i4.QueryRow>>.value(<_i4.QueryRow>[]),
          )
          as _i7.Future<List<_i4.QueryRow>>);

  @override
  _i4.Selectable<_i4.QueryRow> customSelect(
    String? query, {
    List<_i4.Variable<Object>>? variables = const [],
    Set<_i4.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customSelect,
              [query],
              {#variables: variables, #readsFrom: readsFrom},
            ),
            returnValue: _FakeSelectable_40<_i4.QueryRow>(
              this,
              Invocation.method(
                #customSelect,
                [query],
                {#variables: variables, #readsFrom: readsFrom},
              ),
            ),
          )
          as _i4.Selectable<_i4.QueryRow>);

  @override
  _i4.Selectable<_i4.QueryRow> customSelectQuery(
    String? query, {
    List<_i4.Variable<Object>>? variables = const [],
    Set<_i4.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customSelectQuery,
              [query],
              {#variables: variables, #readsFrom: readsFrom},
            ),
            returnValue: _FakeSelectable_40<_i4.QueryRow>(
              this,
              Invocation.method(
                #customSelectQuery,
                [query],
                {#variables: variables, #readsFrom: readsFrom},
              ),
            ),
          )
          as _i4.Selectable<_i4.QueryRow>);

  @override
  _i7.Future<void> customStatement(String? statement, [List<dynamic>? args]) =>
      (super.noSuchMethod(
            Invocation.method(#customStatement, [statement, args]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<T> transaction<T>(
    _i7.Future<T> Function()? action, {
    bool? requireNew = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #transaction,
              [action],
              {#requireNew: requireNew},
            ),
            returnValue:
                _i12.ifNotNull(
                  _i12.dummyValueOrNull<T>(
                    this,
                    Invocation.method(
                      #transaction,
                      [action],
                      {#requireNew: requireNew},
                    ),
                  ),
                  (T v) => _i7.Future<T>.value(v),
                ) ??
                _FakeFuture_33<T>(
                  this,
                  Invocation.method(
                    #transaction,
                    [action],
                    {#requireNew: requireNew},
                  ),
                ),
          )
          as _i7.Future<T>);

  @override
  _i7.Future<T> exclusively<T>(_i7.Future<T> Function()? action) =>
      (super.noSuchMethod(
            Invocation.method(#exclusively, [action]),
            returnValue:
                _i12.ifNotNull(
                  _i12.dummyValueOrNull<T>(
                    this,
                    Invocation.method(#exclusively, [action]),
                  ),
                  (T v) => _i7.Future<T>.value(v),
                ) ??
                _FakeFuture_33<T>(
                  this,
                  Invocation.method(#exclusively, [action]),
                ),
          )
          as _i7.Future<T>);

  @override
  _i7.Future<void> batch(_i7.FutureOr<void> Function(_i4.Batch)? runInBatch) =>
      (super.noSuchMethod(
            Invocation.method(#batch, [runInBatch]),
            returnValue: _i7.Future<void>.value(),
            returnValueForMissingStub: _i7.Future<void>.value(),
          )
          as _i7.Future<void>);

  @override
  _i7.Future<T> runWithInterceptor<T>(
    _i7.Future<T> Function()? action, {
    required _i4.QueryInterceptor? interceptor,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #runWithInterceptor,
              [action],
              {#interceptor: interceptor},
            ),
            returnValue:
                _i12.ifNotNull(
                  _i12.dummyValueOrNull<T>(
                    this,
                    Invocation.method(
                      #runWithInterceptor,
                      [action],
                      {#interceptor: interceptor},
                    ),
                  ),
                  (T v) => _i7.Future<T>.value(v),
                ) ??
                _FakeFuture_33<T>(
                  this,
                  Invocation.method(
                    #runWithInterceptor,
                    [action],
                    {#interceptor: interceptor},
                  ),
                ),
          )
          as _i7.Future<T>);

  @override
  _i4.GenerationContext $write(
    _i4.Component? component, {
    bool? hasMultipleTables,
    int? startIndex,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #$write,
              [component],
              {#hasMultipleTables: hasMultipleTables, #startIndex: startIndex},
            ),
            returnValue: _FakeGenerationContext_41(
              this,
              Invocation.method(
                #$write,
                [component],
                {
                  #hasMultipleTables: hasMultipleTables,
                  #startIndex: startIndex,
                },
              ),
            ),
          )
          as _i4.GenerationContext);

  @override
  _i4.GenerationContext $writeInsertable(
    _i4.TableInfo<_i4.Table, dynamic>? table,
    _i4.Insertable<dynamic>? insertable, {
    int? startIndex,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #$writeInsertable,
              [table, insertable],
              {#startIndex: startIndex},
            ),
            returnValue: _FakeGenerationContext_41(
              this,
              Invocation.method(
                #$writeInsertable,
                [table, insertable],
                {#startIndex: startIndex},
              ),
            ),
          )
          as _i4.GenerationContext);

  @override
  String $expandVar(int? start, int? amount) =>
      (super.noSuchMethod(
            Invocation.method(#$expandVar, [start, amount]),
            returnValue: _i12.dummyValue<String>(
              this,
              Invocation.method(#$expandVar, [start, amount]),
            ),
          )
          as String);
}
